import Head from 'next/head'
import {Layout} from '@dae/ui'
import {Stack, Tabs, TabList, Tab, Link, OrderedList, ListItem} from '@chakra-ui/react'
import NextLink from 'next/link'
import {useRouter} from 'next/router'
import {GetServerSideProps} from 'next'

export default function StudentsList({students}: any) {
  const router = useRouter()
  const address = router.query.address as string | undefined

  return (
    <>
      <Head>
        <title>Students List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout.Course heading="Students List">
        <Stack spacing={8}>
          <Tabs defaultIndex={0}>
            <TabList>
              <Tab>Students List</Tab>
              <Link as={NextLink} href={`/course/${address}/students/enroll`} style={{textDecoration: 'none'}}>
                <Tab>Enroll New Students</Tab>
              </Link>
            </TabList>
          </Tabs>
          <OrderedList>
            {students.map((student: any) => {
              return <ListItem key={student.studentAddress}>{student.studentAddress}</ListItem>
            })}
          </OrderedList>
        </Stack>
      </Layout.Course>
    </>
  )
}

export const getServerSideProps: GetServerSideProps<{students: any}> = async (context) => {
  const {address, chainId} = context.query as {address: string; chainId: string}

  if (!address || !chainId) {
    return {
      redirect: {
        permanent: false,
        destination: '/',
      },
      props: {},
    }
  }

  const res = await fetch(`${process.env.API_URL}/course/students?chainId=${chainId}&address=${address}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      cookie: context.req.headers.cookie || '',
    },
  })

  const json = await res.json()

  if (json.error) {
    return {
      notFound: true,
    }
  }

  return {
    props: {
      students: json,
    },
  }
}
